/* soapH.h
   Generated by gSOAP 2.8.0 from DataCenter.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (9)
#endif

#define soap_default_xsd__string(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__string(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_xsd__string
#define soap_write_xsd__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_xsd__string
#define soap_read_xsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__string(soap, n) soap_instantiate_xsd__string(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__string(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__string soap_instantiate_std__string


#define soap_copy_xsd__string soap_copy_std__string

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns2__add
#define SOAP_TYPE_ns2__add (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__add(struct soap*, struct ns2__add *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__add(struct soap*, const struct ns2__add *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__add(struct soap*, const char*, int, const struct ns2__add *, const char*);
SOAP_FMAC3 struct ns2__add * SOAP_FMAC4 soap_in_ns2__add(struct soap*, const char*, struct ns2__add *, const char*);

#ifndef soap_write_ns2__add
#define soap_write_ns2__add(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns2__add(soap, data), 0) || soap_put_ns2__add(soap, data, "ns2:add", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__add(struct soap*, const struct ns2__add *, const char*, const char*);

#ifndef soap_read_ns2__add
#define soap_read_ns2__add(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__add(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns2__add * SOAP_FMAC4 soap_get_ns2__add(struct soap*, struct ns2__add *, const char*, const char*);

#define soap_new_ns2__add(soap, n) soap_instantiate_ns2__add(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__add(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns2__add * SOAP_FMAC2 soap_instantiate_ns2__add(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__add(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__addResponse
#define SOAP_TYPE_ns2__addResponse (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__addResponse(struct soap*, struct ns2__addResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__addResponse(struct soap*, const struct ns2__addResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__addResponse(struct soap*, const char*, int, const struct ns2__addResponse *, const char*);
SOAP_FMAC3 struct ns2__addResponse * SOAP_FMAC4 soap_in_ns2__addResponse(struct soap*, const char*, struct ns2__addResponse *, const char*);

#ifndef soap_write_ns2__addResponse
#define soap_write_ns2__addResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns2__addResponse(soap, data), 0) || soap_put_ns2__addResponse(soap, data, "ns2:addResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__addResponse(struct soap*, const struct ns2__addResponse *, const char*, const char*);

#ifndef soap_read_ns2__addResponse
#define soap_read_ns2__addResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__addResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns2__addResponse * SOAP_FMAC4 soap_get_ns2__addResponse(struct soap*, struct ns2__addResponse *, const char*, const char*);

#define soap_new_ns2__addResponse(soap, n) soap_instantiate_ns2__addResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__addResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns2__addResponse * SOAP_FMAC2 soap_instantiate_ns2__addResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__addResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__getDataCheckSum
#define SOAP_TYPE_ns2__getDataCheckSum (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getDataCheckSum(struct soap*, struct ns2__getDataCheckSum *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getDataCheckSum(struct soap*, const struct ns2__getDataCheckSum *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getDataCheckSum(struct soap*, const char*, int, const struct ns2__getDataCheckSum *, const char*);
SOAP_FMAC3 struct ns2__getDataCheckSum * SOAP_FMAC4 soap_in_ns2__getDataCheckSum(struct soap*, const char*, struct ns2__getDataCheckSum *, const char*);

#ifndef soap_write_ns2__getDataCheckSum
#define soap_write_ns2__getDataCheckSum(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns2__getDataCheckSum(soap, data), 0) || soap_put_ns2__getDataCheckSum(soap, data, "ns2:getDataCheckSum", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getDataCheckSum(struct soap*, const struct ns2__getDataCheckSum *, const char*, const char*);

#ifndef soap_read_ns2__getDataCheckSum
#define soap_read_ns2__getDataCheckSum(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__getDataCheckSum(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns2__getDataCheckSum * SOAP_FMAC4 soap_get_ns2__getDataCheckSum(struct soap*, struct ns2__getDataCheckSum *, const char*, const char*);

#define soap_new_ns2__getDataCheckSum(soap, n) soap_instantiate_ns2__getDataCheckSum(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__getDataCheckSum(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns2__getDataCheckSum * SOAP_FMAC2 soap_instantiate_ns2__getDataCheckSum(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__getDataCheckSum(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__getDataCheckSumResponse
#define SOAP_TYPE_ns2__getDataCheckSumResponse (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getDataCheckSumResponse(struct soap*, struct ns2__getDataCheckSumResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getDataCheckSumResponse(struct soap*, const struct ns2__getDataCheckSumResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getDataCheckSumResponse(struct soap*, const char*, int, const struct ns2__getDataCheckSumResponse *, const char*);
SOAP_FMAC3 struct ns2__getDataCheckSumResponse * SOAP_FMAC4 soap_in_ns2__getDataCheckSumResponse(struct soap*, const char*, struct ns2__getDataCheckSumResponse *, const char*);

#ifndef soap_write_ns2__getDataCheckSumResponse
#define soap_write_ns2__getDataCheckSumResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns2__getDataCheckSumResponse(soap, data), 0) || soap_put_ns2__getDataCheckSumResponse(soap, data, "ns2:getDataCheckSumResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getDataCheckSumResponse(struct soap*, const struct ns2__getDataCheckSumResponse *, const char*, const char*);

#ifndef soap_read_ns2__getDataCheckSumResponse
#define soap_read_ns2__getDataCheckSumResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__getDataCheckSumResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns2__getDataCheckSumResponse * SOAP_FMAC4 soap_get_ns2__getDataCheckSumResponse(struct soap*, struct ns2__getDataCheckSumResponse *, const char*, const char*);

#define soap_new_ns2__getDataCheckSumResponse(soap, n) soap_instantiate_ns2__getDataCheckSumResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__getDataCheckSumResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns2__getDataCheckSumResponse * SOAP_FMAC2 soap_instantiate_ns2__getDataCheckSumResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__getDataCheckSumResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__getData
#define SOAP_TYPE_ns2__getData (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getData(struct soap*, struct ns2__getData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getData(struct soap*, const struct ns2__getData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getData(struct soap*, const char*, int, const struct ns2__getData *, const char*);
SOAP_FMAC3 struct ns2__getData * SOAP_FMAC4 soap_in_ns2__getData(struct soap*, const char*, struct ns2__getData *, const char*);

#ifndef soap_write_ns2__getData
#define soap_write_ns2__getData(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns2__getData(soap, data), 0) || soap_put_ns2__getData(soap, data, "ns2:getData", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getData(struct soap*, const struct ns2__getData *, const char*, const char*);

#ifndef soap_read_ns2__getData
#define soap_read_ns2__getData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__getData(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns2__getData * SOAP_FMAC4 soap_get_ns2__getData(struct soap*, struct ns2__getData *, const char*, const char*);

#define soap_new_ns2__getData(soap, n) soap_instantiate_ns2__getData(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__getData(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns2__getData * SOAP_FMAC2 soap_instantiate_ns2__getData(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__getData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__getDataResponse
#define SOAP_TYPE_ns2__getDataResponse (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getDataResponse(struct soap*, struct ns2__getDataResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getDataResponse(struct soap*, const struct ns2__getDataResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getDataResponse(struct soap*, const char*, int, const struct ns2__getDataResponse *, const char*);
SOAP_FMAC3 struct ns2__getDataResponse * SOAP_FMAC4 soap_in_ns2__getDataResponse(struct soap*, const char*, struct ns2__getDataResponse *, const char*);

#ifndef soap_write_ns2__getDataResponse
#define soap_write_ns2__getDataResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns2__getDataResponse(soap, data), 0) || soap_put_ns2__getDataResponse(soap, data, "ns2:getDataResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getDataResponse(struct soap*, const struct ns2__getDataResponse *, const char*, const char*);

#ifndef soap_read_ns2__getDataResponse
#define soap_read_ns2__getDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__getDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns2__getDataResponse * SOAP_FMAC4 soap_get_ns2__getDataResponse(struct soap*, struct ns2__getDataResponse *, const char*, const char*);

#define soap_new_ns2__getDataResponse(soap, n) soap_instantiate_ns2__getDataResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__getDataResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns2__getDataResponse * SOAP_FMAC2 soap_instantiate_ns2__getDataResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__getDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__setData
#define SOAP_TYPE_ns2__setData (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__setData(struct soap*, struct ns2__setData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__setData(struct soap*, const struct ns2__setData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__setData(struct soap*, const char*, int, const struct ns2__setData *, const char*);
SOAP_FMAC3 struct ns2__setData * SOAP_FMAC4 soap_in_ns2__setData(struct soap*, const char*, struct ns2__setData *, const char*);

#ifndef soap_write_ns2__setData
#define soap_write_ns2__setData(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns2__setData(soap, data), 0) || soap_put_ns2__setData(soap, data, "ns2:setData", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__setData(struct soap*, const struct ns2__setData *, const char*, const char*);

#ifndef soap_read_ns2__setData
#define soap_read_ns2__setData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__setData(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns2__setData * SOAP_FMAC4 soap_get_ns2__setData(struct soap*, struct ns2__setData *, const char*, const char*);

#define soap_new_ns2__setData(soap, n) soap_instantiate_ns2__setData(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__setData(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns2__setData * SOAP_FMAC2 soap_instantiate_ns2__setData(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__setData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_BlockDataType
#define SOAP_TYPE_BlockDataType (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_BlockDataType(struct soap*, struct BlockDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_BlockDataType(struct soap*, const struct BlockDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_BlockDataType(struct soap*, const char*, int, const struct BlockDataType *, const char*);
SOAP_FMAC3 struct BlockDataType * SOAP_FMAC4 soap_in_BlockDataType(struct soap*, const char*, struct BlockDataType *, const char*);

#ifndef soap_write_BlockDataType
#define soap_write_BlockDataType(soap, data) ( soap_begin_send(soap) || (soap_serialize_BlockDataType(soap, data), 0) || soap_put_BlockDataType(soap, data, "BlockDataType", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_BlockDataType(struct soap*, const struct BlockDataType *, const char*, const char*);

#ifndef soap_read_BlockDataType
#define soap_read_BlockDataType(soap, data) ( soap_begin_recv(soap) || !soap_get_BlockDataType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct BlockDataType * SOAP_FMAC4 soap_get_BlockDataType(struct soap*, struct BlockDataType *, const char*, const char*);

#define soap_new_BlockDataType(soap, n) soap_instantiate_BlockDataType(soap, n, NULL, NULL, NULL)


#define soap_delete_BlockDataType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct BlockDataType * SOAP_FMAC2 soap_instantiate_BlockDataType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_BlockDataType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_BlockKeyType
#define SOAP_TYPE_BlockKeyType (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_BlockKeyType(struct soap*, struct BlockKeyType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_BlockKeyType(struct soap*, const struct BlockKeyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_BlockKeyType(struct soap*, const char*, int, const struct BlockKeyType *, const char*);
SOAP_FMAC3 struct BlockKeyType * SOAP_FMAC4 soap_in_BlockKeyType(struct soap*, const char*, struct BlockKeyType *, const char*);

#ifndef soap_write_BlockKeyType
#define soap_write_BlockKeyType(soap, data) ( soap_begin_send(soap) || (soap_serialize_BlockKeyType(soap, data), 0) || soap_put_BlockKeyType(soap, data, "BlockKeyType", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_BlockKeyType(struct soap*, const struct BlockKeyType *, const char*, const char*);

#ifndef soap_read_BlockKeyType
#define soap_read_BlockKeyType(soap, data) ( soap_begin_recv(soap) || !soap_get_BlockKeyType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct BlockKeyType * SOAP_FMAC4 soap_get_BlockKeyType(struct soap*, struct BlockKeyType *, const char*, const char*);

#define soap_new_BlockKeyType(soap, n) soap_instantiate_BlockKeyType(soap, n, NULL, NULL, NULL)


#define soap_delete_BlockKeyType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct BlockKeyType * SOAP_FMAC2 soap_instantiate_BlockKeyType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_BlockKeyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerToBlockDataType
#define SOAP_TYPE_PointerToBlockDataType (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToBlockDataType(struct soap*, struct BlockDataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToBlockDataType(struct soap*, const char *, int, struct BlockDataType *const*, const char *);
SOAP_FMAC3 struct BlockDataType ** SOAP_FMAC4 soap_in_PointerToBlockDataType(struct soap*, const char*, struct BlockDataType **, const char*);

#ifndef soap_write_PointerToBlockDataType
#define soap_write_PointerToBlockDataType(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToBlockDataType(soap, data), 0) || soap_put_PointerToBlockDataType(soap, data, "BlockDataType", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToBlockDataType(struct soap*, struct BlockDataType *const*, const char*, const char*);

#ifndef soap_read_PointerToBlockDataType
#define soap_read_PointerToBlockDataType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToBlockDataType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct BlockDataType ** SOAP_FMAC4 soap_get_PointerToBlockDataType(struct soap*, struct BlockDataType **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToBlockKeyType
#define SOAP_TYPE_PointerToBlockKeyType (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToBlockKeyType(struct soap*, struct BlockKeyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToBlockKeyType(struct soap*, const char *, int, struct BlockKeyType *const*, const char *);
SOAP_FMAC3 struct BlockKeyType ** SOAP_FMAC4 soap_in_PointerToBlockKeyType(struct soap*, const char*, struct BlockKeyType **, const char*);

#ifndef soap_write_PointerToBlockKeyType
#define soap_write_PointerToBlockKeyType(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToBlockKeyType(soap, data), 0) || soap_put_PointerToBlockKeyType(soap, data, "BlockKeyType", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToBlockKeyType(struct soap*, struct BlockKeyType *const*, const char*, const char*);

#ifndef soap_read_PointerToBlockKeyType
#define soap_read_PointerToBlockKeyType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToBlockKeyType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct BlockKeyType ** SOAP_FMAC4 soap_get_PointerToBlockKeyType(struct soap*, struct BlockKeyType **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
